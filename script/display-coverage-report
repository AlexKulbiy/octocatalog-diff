#!/usr/bin/env ruby

# Quick hacky script to parse the coverage JSON report and display it in human-readable terms.
# Usage: display-coverage-report <JSON_FILE>

require 'json'
require 'pathname'

# Arg handling and validation
json_file = ARGV.first
unless json_file
  raise "Usage: #{__FILE__} <json_coverage_file>"
end

unless File.file?(json_file)
  raise "Error: Provided file #{json_file} does not exist"
end

# Find files with < 100% coverage
result = {}
data = JSON.parse(File.read(json_file))
data['files'].each do |data|
  next if data['covered_percent'] == 100

  result[data['filename']] = { covered: data['covered_percent'], lines: [] }
  data['coverage'].each_with_index do |cov, index|
    next if cov.nil?
    result[data['filename']][:lines] << (index + 1) if cov == 0
  end
end

# Display results
if result.empty?
  puts "100% Coverage - You're all set, friend! :sparkles:"
  exit 0
end

puts ""
puts "-------------------------------------------------------------"
puts "Test coverage report"
puts "-------------------------------------------------------------"

basedir = Pathname.new(File.expand_path('..', File.dirname(__FILE__)))
result.keys.sort.each do |filename|
  data = result[filename]
  relative_path = Pathname.new(filename).relative_path_from(basedir).to_s
  printf "* %s: %0.02f%% (missed: %s)", relative_path, data[:covered], data[:lines].join(",")
end

puts ""
exit 1
